/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public int pairSum(ListNode head) {
     
     ListNode slow = head , fast = head;

     while(fast != null && fast.next != null)
     {
        slow = slow.next;
        fast = fast.next.next;
     }

     ListNode prev = null,curr = slow;
     while(curr != null)
     {
        ListNode nextNode = curr.next;
        curr.next = prev;
        prev = curr;
        curr = nextNode;
     }

     int maxSum = 0;
     ListNode firstHalf = head, secondHalf = prev;
     while(secondHalf != null)
     {
        maxSum = Math.max(maxSum ,firstHalf.val + secondHalf.val);
        firstHalf = firstHalf.next;
        secondHalf = secondHalf.next;
     }

     return maxSum;
       }
    
}